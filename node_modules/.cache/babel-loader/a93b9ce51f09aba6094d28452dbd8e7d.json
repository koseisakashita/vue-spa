{"remainingRequest":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/util/theme.js","dependencies":[{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/util/theme.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0IF90eXBlb2YyIGZyb20gIi9Vc2Vycy9zYWthc2hpdGEvRG9jdW1lbnRzL3NvZnR3YXJlL3NhbXBsZS12dWUtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwoKdmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7CiAgICB2YXIgX2FyciA9IFtdOwogICAgdmFyIF9uID0gdHJ1ZTsKICAgIHZhciBfZCA9IGZhbHNlOwogICAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICAgIHRyeSB7CiAgICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfZCA9IHRydWU7CiAgICAgIF9lID0gZXJyOwogICAgfSBmaW5hbGx5IHsKICAgICAgdHJ5IHsKICAgICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSkgX2lbInJldHVybiJdKCk7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBfYXJyOwogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsKICAgIGlmIChBcnJheS5pc0FycmF5KGFycikpIHsKICAgICAgcmV0dXJuIGFycjsKICAgIH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7CiAgICAgIHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7CiAgICB9CiAgfTsKfSgpOwoKdmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIF90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcikgPT09ICJzeW1ib2wiID8gZnVuY3Rpb24gKG9iaikgewogIHJldHVybiBfdHlwZW9mMihvYmopOwp9IDogZnVuY3Rpb24gKG9iaikgewogIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IF90eXBlb2YyKG9iaik7Cn07CgppbXBvcnQgeyBjb2xvclRvSW50LCBpbnRUb0hleCwgY29sb3JUb0hleCB9IGZyb20gJy4vY29sb3JVdGlscyc7CmltcG9ydCAqIGFzIHNSR0IgZnJvbSAnLi9jb2xvci90cmFuc2Zvcm1TUkdCJzsKaW1wb3J0ICogYXMgTEFCIGZyb20gJy4vY29sb3IvdHJhbnNmb3JtQ0lFTEFCJzsKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlKHRoZW1lKSB7CiAgdmFyIGlzSXRlbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7CiAgdmFyIGNvbG9ycyA9IE9iamVjdC5rZXlzKHRoZW1lKTsKICB2YXIgcGFyc2VkVGhlbWUgPSB7fTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb2xvcnMubGVuZ3RoOyArK2kpIHsKICAgIHZhciBuYW1lID0gY29sb3JzW2ldOwogICAgdmFyIHZhbHVlID0gdGhlbWVbbmFtZV07CgogICAgaWYgKGlzSXRlbSkgewogICAgICBpZiAobmFtZSA9PT0gJ2Jhc2UnIHx8IG5hbWUuc3RhcnRzV2l0aCgnbGlnaHRlbicpIHx8IG5hbWUuc3RhcnRzV2l0aCgnZGFya2VuJykpIHsKICAgICAgICBwYXJzZWRUaGVtZVtuYW1lXSA9IGNvbG9yVG9IZXgodmFsdWUpOwogICAgICB9CiAgICB9IGVsc2UgaWYgKCh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHZhbHVlKSkgPT09ICdvYmplY3QnKSB7CiAgICAgIHBhcnNlZFRoZW1lW25hbWVdID0gcGFyc2UodmFsdWUsIHRydWUpOwogICAgfSBlbHNlIHsKICAgICAgcGFyc2VkVGhlbWVbbmFtZV0gPSBnZW5WYXJpYXRpb25zKG5hbWUsIGNvbG9yVG9JbnQodmFsdWUpKTsKICAgIH0KICB9CgogIHJldHVybiBwYXJzZWRUaGVtZTsKfQovKioKICogR2VuZXJhdGUgdGhlIENTUyBmb3IgYSBiYXNlIGNvbG9yICgucHJpbWFyeSkKICovCgp2YXIgZ2VuQmFzZUNvbG9yID0gZnVuY3Rpb24gZ2VuQmFzZUNvbG9yKG5hbWUsIHZhbHVlKSB7CiAgcmV0dXJuICdcbi4nICsgbmFtZSArICcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAnICsgdmFsdWUgKyAnICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1jb2xvcjogJyArIHZhbHVlICsgJyAhaW1wb3J0YW50O1xufVxuLicgKyBuYW1lICsgJy0tdGV4dCB7XG4gIGNvbG9yOiAnICsgdmFsdWUgKyAnICFpbXBvcnRhbnQ7XG4gIGNhcmV0LWNvbG9yOiAnICsgdmFsdWUgKyAnICFpbXBvcnRhbnQ7XG59JzsKfTsKLyoqCiAqIEdlbmVyYXRlIHRoZSBDU1MgZm9yIGEgdmFyaWFudCBjb2xvciAoLnByaW1hcnkuZGFya2VuLTIpCiAqLwoKCnZhciBnZW5WYXJpYW50Q29sb3IgPSBmdW5jdGlvbiBnZW5WYXJpYW50Q29sb3IobmFtZSwgdmFyaWFudCwgdmFsdWUpIHsKICB2YXIgX3ZhcmlhbnQkc3BsaXQgPSB2YXJpYW50LnNwbGl0KC8oXGQpLywgMiksCiAgICAgIF92YXJpYW50JHNwbGl0MiA9IF9zbGljZWRUb0FycmF5KF92YXJpYW50JHNwbGl0LCAyKSwKICAgICAgdHlwZSA9IF92YXJpYW50JHNwbGl0MlswXSwKICAgICAgbiA9IF92YXJpYW50JHNwbGl0MlsxXTsKCiAgcmV0dXJuICdcbi4nICsgbmFtZSArICcuJyArIHR5cGUgKyAnLScgKyBuICsgJyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICcgKyB2YWx1ZSArICcgIWltcG9ydGFudDtcbiAgYm9yZGVyLWNvbG9yOiAnICsgdmFsdWUgKyAnICFpbXBvcnRhbnQ7XG59XG4uJyArIG5hbWUgKyAnLS10ZXh0LnRleHQtLScgKyB0eXBlICsgJy0nICsgbiArICcge1xuICBjb2xvcjogJyArIHZhbHVlICsgJyAhaW1wb3J0YW50O1xuICBjYXJldC1jb2xvcjogJyArIHZhbHVlICsgJyAhaW1wb3J0YW50O1xufSc7Cn07Cgp2YXIgZ2VuQ29sb3JWYXJpYWJsZU5hbWUgPSBmdW5jdGlvbiBnZW5Db2xvclZhcmlhYmxlTmFtZShuYW1lKSB7CiAgdmFyIHZhcmlhbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICdiYXNlJzsKICByZXR1cm4gJy0tdi0nICsgbmFtZSArICctJyArIHZhcmlhbnQ7Cn07Cgp2YXIgZ2VuQ29sb3JWYXJpYWJsZSA9IGZ1bmN0aW9uIGdlbkNvbG9yVmFyaWFibGUobmFtZSkgewogIHZhciB2YXJpYW50ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnYmFzZSc7CiAgcmV0dXJuICd2YXIoJyArIGdlbkNvbG9yVmFyaWFibGVOYW1lKG5hbWUsIHZhcmlhbnQpICsgJyknOwp9OwoKZXhwb3J0IGZ1bmN0aW9uIGdlblN0eWxlcyh0aGVtZSkgewogIHZhciBjc3NWYXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogIHZhciBjb2xvcnMgPSBPYmplY3Qua2V5cyh0aGVtZSk7CiAgaWYgKCFjb2xvcnMubGVuZ3RoKSByZXR1cm4gJyc7CiAgdmFyIHZhcmlhYmxlc0NzcyA9ICcnOwogIHZhciBjc3MgPSAnJzsKICB2YXIgYUNvbG9yID0gY3NzVmFyID8gZ2VuQ29sb3JWYXJpYWJsZSgncHJpbWFyeScpIDogdGhlbWUucHJpbWFyeS5iYXNlOwogIGNzcyArPSAnYSB7IGNvbG9yOiAnICsgYUNvbG9yICsgJzsgfSc7CgogIGZvciAodmFyIGkgPSAwOyBpIDwgY29sb3JzLmxlbmd0aDsgKytpKSB7CiAgICB2YXIgbmFtZSA9IGNvbG9yc1tpXTsKICAgIHZhciB2YWx1ZSA9IHRoZW1lW25hbWVdOwogICAgaWYgKCh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHZhbHVlKSkgIT09ICdvYmplY3QnKSBjb250aW51ZTsKICAgIGNzcyArPSBnZW5CYXNlQ29sb3IobmFtZSwgY3NzVmFyID8gZ2VuQ29sb3JWYXJpYWJsZShuYW1lKSA6IHZhbHVlLmJhc2UpOwogICAgY3NzVmFyICYmICh2YXJpYWJsZXNDc3MgKz0gJyAgJyArIGdlbkNvbG9yVmFyaWFibGVOYW1lKG5hbWUpICsgJzogJyArIHZhbHVlLmJhc2UgKyAnO1xuJyk7CiAgICB2YXIgdmFyaWFudHMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7CgogICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHZhcmlhbnRzLmxlbmd0aDsgKytfaSkgewogICAgICB2YXIgdmFyaWFudCA9IHZhcmlhbnRzW19pXTsKICAgICAgdmFyIHZhcmlhbnRWYWx1ZSA9IHZhbHVlW3ZhcmlhbnRdOwogICAgICBpZiAodmFyaWFudCA9PT0gJ2Jhc2UnKSBjb250aW51ZTsKICAgICAgY3NzICs9IGdlblZhcmlhbnRDb2xvcihuYW1lLCB2YXJpYW50LCBjc3NWYXIgPyBnZW5Db2xvclZhcmlhYmxlKG5hbWUsIHZhcmlhbnQpIDogdmFyaWFudFZhbHVlKTsKICAgICAgY3NzVmFyICYmICh2YXJpYWJsZXNDc3MgKz0gJyAgJyArIGdlbkNvbG9yVmFyaWFibGVOYW1lKG5hbWUsIHZhcmlhbnQpICsgJzogJyArIHZhcmlhbnRWYWx1ZSArICc7XG4nKTsKICAgIH0KICB9CgogIGlmIChjc3NWYXIpIHsKICAgIHZhcmlhYmxlc0NzcyA9ICc6cm9vdCB7XG4nICsgdmFyaWFibGVzQ3NzICsgJ31cblxuJzsKICB9CgogIHJldHVybiB2YXJpYWJsZXNDc3MgKyBjc3M7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdlblZhcmlhdGlvbnMobmFtZSwgdmFsdWUpIHsKICB2YXIgdmFsdWVzID0gewogICAgYmFzZTogaW50VG9IZXgodmFsdWUpCiAgfTsKCiAgZm9yICh2YXIgaSA9IDU7IGkgPiAwOyAtLWkpIHsKICAgIHZhbHVlc1snbGlnaHRlbicgKyBpXSA9IGludFRvSGV4KGxpZ2h0ZW4odmFsdWUsIGkpKTsKICB9CgogIGZvciAodmFyIF9pMiA9IDE7IF9pMiA8PSA0OyArK19pMikgewogICAgdmFsdWVzWydkYXJrZW4nICsgX2kyXSA9IGludFRvSGV4KGRhcmtlbih2YWx1ZSwgX2kyKSk7CiAgfQoKICByZXR1cm4gdmFsdWVzOwp9CgpmdW5jdGlvbiBsaWdodGVuKHZhbHVlLCBhbW91bnQpIHsKICB2YXIgbGFiID0gTEFCLmZyb21YWVooc1JHQi50b1hZWih2YWx1ZSkpOwogIGxhYlswXSA9IGxhYlswXSArIGFtb3VudCAqIDEwOwogIHJldHVybiBzUkdCLmZyb21YWVooTEFCLnRvWFlaKGxhYikpOwp9CgpmdW5jdGlvbiBkYXJrZW4odmFsdWUsIGFtb3VudCkgewogIHZhciBsYWIgPSBMQUIuZnJvbVhZWihzUkdCLnRvWFlaKHZhbHVlKSk7CiAgbGFiWzBdID0gbGFiWzBdIC0gYW1vdW50ICogMTA7CiAgcmV0dXJuIHNSR0IuZnJvbVhZWihMQUIudG9YWVoobGFiKSk7Cn0="},{"version":3,"sources":["../../src/util/theme.ts"],"names":[],"mappings":"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","sourcesContent":["import { colorToInt, intToHex, colorToHex, RGB } from './colorUtils'\nimport * as sRGB from './color/transformSRGB'\nimport * as LAB from './color/transformCIELAB'\nimport { VuetifyTheme } from 'vuetify/types'\n\ninterface ParsedThemeItem {\n  base: string\n  lighten5: string\n  lighten4: string\n  lighten3: string\n  lighten2: string\n  lighten1: string\n  darken1: string\n  darken2: string\n  darken3: string\n  darken4: string\n\n  [name: string]: string\n}\n\ninterface ParsedTheme {\n  [name: string]: ParsedThemeItem\n}\n\nexport function parse (theme: VuetifyTheme | Record<string, number | string>, isItem = false): ParsedTheme {\n  const colors = Object.keys(theme)\n  const parsedTheme: any = {}\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    if (isItem) {\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value)\n      }\n    } else if (typeof value === 'object') {\n      parsedTheme[name] = parse(value, true)\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value))\n    }\n  }\n\n  return parsedTheme\n}\n\n/**\n * Generate the CSS for a base color (.primary)\n */\nconst genBaseColor = (name: string, value: string): string => {\n  return `\n.${name} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.${name}--text {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\nconst genVariantColor = (name: string, variant: string, value: string): string => {\n  const [type, n] = variant.split(/(\\d)/, 2)\n  return `\n.${name}.${type}-${n} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.${name}--text.text--${type}-${n} {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\nconst genColorVariableName = (name: string, variant = 'base'): string => `--v-${name}-${variant}`\n\nconst genColorVariable = (name: string, variant = 'base'): string => `var(${genColorVariableName(name, variant)})`\n\nexport function genStyles (theme: ParsedTheme, cssVar = false): string {\n  const colors = Object.keys(theme)\n\n  if (!colors.length) return ''\n\n  let variablesCss = ''\n  let css = ''\n\n  const aColor = cssVar ? genColorVariable('primary') : theme.primary.base\n  css += `a { color: ${aColor}; }`\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    if (typeof value !== 'object') continue\n\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base)\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`)\n\n    const variants = Object.keys(value)\n    for (let i = 0; i < variants.length; ++i) {\n      const variant = variants[i]\n      const variantValue = value[variant]\n      if (variant === 'base') continue\n\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue)\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`)\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`\n  }\n\n  return variablesCss + css\n}\n\nexport function genVariations (name: string, value: RGB): Record<string, string> {\n  const values: Record<string, string> = {\n    base: intToHex(value)\n  }\n\n  for (let i = 5; i > 0; --i) {\n    values[`lighten${i}`] = intToHex(lighten(value, i))\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[`darken${i}`] = intToHex(darken(value, i))\n  }\n\n  return values\n}\n\nfunction lighten (value: RGB, amount: number): RGB {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n\nfunction darken (value: RGB, amount: number): RGB {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n"],"sourceRoot":""}]}