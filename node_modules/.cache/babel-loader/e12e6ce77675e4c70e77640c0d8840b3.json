{"remainingRequest":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VSparkline/helpers/path.js","dependencies":[{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VSparkline/helpers/path.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCB7IGNoZWNrQ29sbGluZWFyLCBnZXREaXN0YW5jZSwgbW92ZVRvIH0gZnJvbSAnLi9tYXRoJzsKLyoqCiAqIEZyb20gaHR0cHM6Ly9naXRodWIuY29tL3Vuc3BsYXNoL3JlYWN0LXRyZW5kL2Jsb2IvbWFzdGVyL3NyYy9oZWxwZXJzL0RPTS5oZWxwZXJzLmpzI0wxOAogKi8KCmV4cG9ydCBmdW5jdGlvbiBnZW5QYXRoKHBvaW50cywgcmFkaXVzKSB7CiAgdmFyIGZpbGwgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZhbHNlOwogIHZhciBoZWlnaHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IDc1OwogIHZhciBzdGFydCA9IHBvaW50cy5zaGlmdCgpOwogIHZhciBlbmQgPSBwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDFdOwogIHJldHVybiAoZmlsbCA/ICdNJyArIHN0YXJ0LnggKyAnICcgKyBoZWlnaHQgKyAnIEwnICsgc3RhcnQueCArICcgJyArIHN0YXJ0LnkgOiAnTScgKyBzdGFydC54ICsgJyAnICsgc3RhcnQueSkgKyBwb2ludHMubWFwKGZ1bmN0aW9uIChwb2ludCwgaW5kZXgpIHsKICAgIHZhciBuZXh0ID0gcG9pbnRzW2luZGV4ICsgMV07CiAgICB2YXIgcHJldiA9IHBvaW50c1tpbmRleCAtIDFdIHx8IHN0YXJ0OwogICAgdmFyIGlzQ29sbGluZWFyID0gbmV4dCAmJiBjaGVja0NvbGxpbmVhcihuZXh0LCBwb2ludCwgcHJldik7CgogICAgaWYgKCFuZXh0IHx8IGlzQ29sbGluZWFyKSB7CiAgICAgIHJldHVybiAnTCcgKyBwb2ludC54ICsgJyAnICsgcG9pbnQueTsKICAgIH0KCiAgICB2YXIgdGhyZXNob2xkID0gTWF0aC5taW4oZ2V0RGlzdGFuY2UocHJldiwgcG9pbnQpLCBnZXREaXN0YW5jZShuZXh0LCBwb2ludCkpOwogICAgdmFyIGlzVG9vQ2xvc2VGb3JSYWRpdXMgPSB0aHJlc2hvbGQgLyAyIDwgcmFkaXVzOwogICAgdmFyIHJhZGl1c0ZvclBvaW50ID0gaXNUb29DbG9zZUZvclJhZGl1cyA/IHRocmVzaG9sZCAvIDIgOiByYWRpdXM7CiAgICB2YXIgYmVmb3JlID0gbW92ZVRvKHByZXYsIHBvaW50LCByYWRpdXNGb3JQb2ludCk7CiAgICB2YXIgYWZ0ZXIgPSBtb3ZlVG8obmV4dCwgcG9pbnQsIHJhZGl1c0ZvclBvaW50KTsKICAgIHJldHVybiAnTCcgKyBiZWZvcmUueCArICcgJyArIGJlZm9yZS55ICsgJ1MnICsgcG9pbnQueCArICcgJyArIHBvaW50LnkgKyAnICcgKyBhZnRlci54ICsgJyAnICsgYWZ0ZXIueTsKICB9KS5qb2luKCcnKSArIChmaWxsID8gJ0wnICsgZW5kLnggKyAnICcgKyBoZWlnaHQgKyAnIFonIDogJycpOwp9"},{"version":3,"sources":["../../../../src/components/VSparkline/helpers/path.ts"],"names":[],"mappings":";;AACA,SAAA,cAAA,EAAA,WAAA,EAAA,MAAA,QAAA,QAAA;AAEA;;;;AAGA,OAAM,SAAA,OAAA,CAAA,MAAA,EAAA,MAAA,EAA6E;AAAA,MAAzB,IAAyB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAlB,KAAkB;AAAA,MAAX,MAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAE;AACjF,MAAM,KAAA,GAAQ,MAAA,CAAd,KAAc,EAAd;AACA,MAAM,GAAA,GAAM,MAAA,CAAO,MAAA,CAAA,MAAA,GAAnB,CAAY,CAAZ;AAEA,SACE,CAAC,IAAA,GAAA,MAAW,KAAA,CAAX,CAAA,GAAA,GAAA,GAAA,MAAA,GAAA,IAAA,GAAiC,KAAA,CAAjC,CAAA,GAAA,GAAA,GAA4C,KAAA,CAA5C,CAAA,GAAA,MAA4D,KAAA,CAA5D,CAAA,GAAA,GAAA,GAAuE,KAAA,CAAxE,CAAA,IACA,MAAA,CAAA,GAAA,CACO,UAAA,KAAA,EAAA,KAAA,EAAiB;AACpB,QAAM,IAAA,GAAO,MAAA,CAAO,KAAA,GAApB,CAAa,CAAb;AACA,QAAM,IAAA,GAAO,MAAA,CAAO,KAAA,GAAP,CAAA,CAAA,IAAb,KAAA;AACA,QAAM,WAAA,GAAc,IAAA,IAAQ,cAAA,CAAA,IAAA,EAAA,KAAA,EAA5B,IAA4B,CAA5B;;AAEA,QAAI,CAAA,IAAA,IAAJ,WAAA,EAA0B;AACxB,aAAA,MAAW,KAAA,CAAX,CAAA,GAAA,GAAA,GAAsB,KAAA,CAAtB,CAAA;AACD;;AAED,QAAM,SAAA,GAAY,IAAA,CAAA,GAAA,CAChB,WAAA,CAAA,IAAA,EADgB,KAChB,CADgB,EAEhB,WAAA,CAAA,IAAA,EAFF,KAEE,CAFgB,CAAlB;AAIA,QAAM,mBAAA,GAAsB,SAAA,GAAA,CAAA,GAA5B,MAAA;AACA,QAAM,cAAA,GAAiB,mBAAA,GAAsB,SAAA,GAAtB,CAAA,GAAvB,MAAA;AAEA,QAAM,MAAA,GAAS,MAAA,CAAA,IAAA,EAAA,KAAA,EAAf,cAAe,CAAf;AACA,QAAM,KAAA,GAAQ,MAAA,CAAA,IAAA,EAAA,KAAA,EAAd,cAAc,CAAd;AAEA,WAAA,MAAW,MAAA,CAAX,CAAA,GAAA,GAAA,GAAuB,MAAA,CAAvB,CAAA,GAAA,GAAA,GAAmC,KAAA,CAAnC,CAAA,GAAA,GAAA,GAA8C,KAAA,CAA9C,CAAA,GAAA,GAAA,GAAyD,KAAA,CAAzD,CAAA,GAAA,GAAA,GAAoE,KAAA,CAApE,CAAA;AApBJ,GAAA,EAAA,IAAA,CADA,EACA,CADA,IAwBC,IAAA,GAAA,MAAW,GAAA,CAAX,CAAA,GAAA,GAAA,GAAA,MAAA,GAAA,IAAA,GAzBH,EACE,CADF;AA0BD","sourcesContent":["import { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height} Z` : ''))\n}\n"],"sourceRoot":""}]}