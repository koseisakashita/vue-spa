{"remainingRequest":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/directives/ripple.js","dependencies":[{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/directives/ripple.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../src/directives/ripple.ts"],"names":[],"mappings":"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","sourcesContent":["import { VNode, VNodeDirective } from 'vue'\nimport { consoleWarn } from '../util/console'\n\nfunction transform (el: HTMLElement, value: string) {\n  el.style['transform'] = value\n  el.style['webkitTransform'] = value\n}\n\nfunction opacity (el: HTMLElement, value: number) {\n  el.style['opacity'] = value.toString()\n}\n\nexport interface RippleOptions {\n  class?: string\n  center?: boolean\n  circle?: boolean\n}\n\nfunction isTouchEvent (e: MouseEvent | TouchEvent): e is TouchEvent {\n  return e.constructor.name === 'TouchEvent'\n}\n\nconst calculate = (e: MouseEvent | TouchEvent, el: HTMLElement, value: RippleOptions = {}) => {\n  const offset = el.getBoundingClientRect()\n  const target = isTouchEvent(e) ? e.touches[e.touches.length - 1] : e\n  const localX = target.clientX - offset.left\n  const localY = target.clientY - offset.top\n\n  let radius = 0\n  let scale = 0.3\n  if (el._ripple && el._ripple.circle) {\n    scale = 0.15\n    radius = el.clientWidth / 2\n    radius = value.center ? radius : radius + Math.sqrt((localX - radius) ** 2 + (localY - radius) ** 2) / 4\n  } else {\n    radius = Math.sqrt(el.clientWidth ** 2 + el.clientHeight ** 2) / 2\n  }\n\n  const centerX = `${(el.clientWidth - (radius * 2)) / 2}px`\n  const centerY = `${(el.clientHeight - (radius * 2)) / 2}px`\n\n  const x = value.center ? centerX : `${localX - radius}px`\n  const y = value.center ? centerY : `${localY - radius}px`\n\n  return { radius, scale, x, y, centerX, centerY }\n}\n\nconst ripple = {\n  /* eslint-disable max-statements */\n  show (e: MouseEvent | TouchEvent, el: HTMLElement, value: RippleOptions = {}) {\n    if (!el._ripple || !el._ripple.enabled) {\n      return\n    }\n\n    const container = document.createElement('span')\n    const animation = document.createElement('span')\n\n    container.appendChild(animation)\n    container.className = 'v-ripple__container'\n\n    if (value.class) {\n      container.className += ` ${value.class}`\n    }\n\n    const { radius, scale, x, y, centerX, centerY } = calculate(e, el, value)\n\n    const size = `${radius * 2}px`\n    animation.className = 'v-ripple__animation'\n    animation.style.width = size\n    animation.style.height = size\n\n    el.appendChild(container)\n\n    const computed = window.getComputedStyle(el)\n    if (computed && computed.position === 'static') {\n      el.style.position = 'relative'\n      el.dataset.previousPosition = 'static'\n    }\n\n    animation.classList.add('v-ripple__animation--enter')\n    animation.classList.add('v-ripple__animation--visible')\n    transform(animation, `translate(${x}, ${y}) scale3d(${scale},${scale},${scale})`)\n    opacity(animation, 0)\n    animation.dataset.activated = String(performance.now())\n\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--enter')\n      animation.classList.add('v-ripple__animation--in')\n      transform(animation, `translate(${centerX}, ${centerY}) scale3d(1,1,1)`)\n      opacity(animation, 0.25)\n    }, 0)\n  },\n\n  hide (el: HTMLElement | null) {\n    if (!el || !el._ripple || !el._ripple.enabled) return\n\n    const ripples = el.getElementsByClassName('v-ripple__animation')\n\n    if (ripples.length === 0) return\n    const animation = ripples[ripples.length - 1]\n\n    if (animation.dataset.isHiding) return\n    else animation.dataset.isHiding = 'true'\n\n    const diff = performance.now() - Number(animation.dataset.activated)\n    const delay = Math.max(250 - diff, 0)\n\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--in')\n      animation.classList.add('v-ripple__animation--out')\n      opacity(animation, 0)\n\n      setTimeout(() => {\n        const ripples = el.getElementsByClassName('v-ripple__animation')\n        if (ripples.length === 1 && el.dataset.previousPosition) {\n          el.style.position = el.dataset.previousPosition\n          delete el.dataset.previousPosition\n        }\n\n        animation.parentNode && el.removeChild(animation.parentNode)\n      }, 300)\n    }, delay)\n  }\n}\n\nfunction isRippleEnabled (value: any): value is true {\n  return typeof value === 'undefined' || !!value\n}\n\nfunction rippleShow (e: MouseEvent | TouchEvent) {\n  const value: RippleOptions = {}\n  const element = e.currentTarget as HTMLElement\n  if (!element || !element._ripple || element._ripple.touched) return\n  if (isTouchEvent(e)) {\n    element._ripple.touched = true\n  }\n  value.center = element._ripple.centered\n  if (element._ripple.class) {\n    value.class = element._ripple.class\n  }\n  ripple.show(e, element, value)\n}\n\nfunction rippleHide (e: Event) {\n  const element = e.currentTarget as HTMLElement | null\n  if (!element) return\n\n  window.setTimeout(() => {\n    if (element._ripple) {\n      element._ripple.touched = false\n    }\n  })\n  ripple.hide(element)\n}\n\nfunction updateRipple (el: HTMLElement, binding: VNodeDirective, wasEnabled: boolean) {\n  const enabled = isRippleEnabled(binding.value)\n  if (!enabled) {\n    ripple.hide(el)\n  }\n  el._ripple = el._ripple || {}\n  el._ripple.enabled = enabled\n  const value = binding.value || {}\n  if (value.center) {\n    el._ripple.centered = true\n  }\n  if (value.class) {\n    el._ripple.class = binding.value.class\n  }\n  if (value.circle) {\n    el._ripple.circle = value.circle\n  }\n  if (enabled && !wasEnabled) {\n    el.addEventListener('touchstart', rippleShow, { passive: true })\n    el.addEventListener('touchend', rippleHide, { passive: true })\n    el.addEventListener('touchcancel', rippleHide)\n\n    el.addEventListener('mousedown', rippleShow)\n    el.addEventListener('mouseup', rippleHide)\n    el.addEventListener('mouseleave', rippleHide)\n    // Anchor tags can be dragged, causes other hides to fail - #1537\n    el.addEventListener('dragstart', rippleHide, { passive: true })\n  } else if (!enabled && wasEnabled) {\n    removeListeners(el)\n  }\n}\n\nfunction removeListeners (el: HTMLElement) {\n  el.removeEventListener('mousedown', rippleShow)\n  el.removeEventListener('touchstart', rippleHide)\n  el.removeEventListener('touchend', rippleHide)\n  el.removeEventListener('touchcancel', rippleHide)\n  el.removeEventListener('mouseup', rippleHide)\n  el.removeEventListener('mouseleave', rippleHide)\n  el.removeEventListener('dragstart', rippleHide)\n}\n\nfunction directive (el: HTMLElement, binding: VNodeDirective, node: VNode) {\n  updateRipple(el, binding, false)\n\n  // warn if an inline element is used, waiting for el to be in the DOM first\n  node.context && node.context.$nextTick(() => {\n    const computed = window.getComputedStyle(el)\n    if (computed && computed.display === 'inline') {\n      const context = (node as any).fnOptions ? [(node as any).fnOptions, node.context] : [node.componentInstance]\n      consoleWarn('v-ripple can only be used on block-level elements', ...context)\n    }\n  })\n}\n\nfunction unbind (el: HTMLElement) {\n  delete el._ripple\n  removeListeners(el)\n}\n\nfunction update (el: HTMLElement, binding: VNodeDirective) {\n  if (binding.value === binding.oldValue) {\n    return\n  }\n\n  const wasEnabled = isRippleEnabled(binding.oldValue)\n  updateRipple(el, binding, wasEnabled)\n}\n\nexport default {\n  bind: directive,\n  unbind,\n  update\n}\n"],"sourceRoot":""}]}