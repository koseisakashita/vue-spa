{"remainingRequest":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/thread-loader/dist/cjs.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbs.js","dependencies":[{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwoKdmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07CgogICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgewogICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgewogICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn07IC8vIFN0eWxlcwoKCmltcG9ydCAnLi4vLi4vLi4vc3JjL3N0eWx1cy9jb21wb25lbnRzL19icmVhZGNydW1icy5zdHlsJzsgLy8gQ29tcG9uZW50cwoKaW1wb3J0IHsgVkJyZWFkY3J1bWJzRGl2aWRlciwgVkJyZWFkY3J1bWJzSXRlbSB9IGZyb20gJy4nOyAvLyBNaXhpbnMKCmltcG9ydCBUaGVtZWFibGUgZnJvbSAnLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSc7IC8vIFV0aWxzCgppbXBvcnQgeyBkZXByZWNhdGUgfSBmcm9tICcuLi8uLi91dGlsL2NvbnNvbGUnOwppbXBvcnQgbWl4aW5zIGZyb20gJy4uLy4uL3V0aWwvbWl4aW5zJzsKZXhwb3J0IGRlZmF1bHQgbWl4aW5zKFRoZW1lYWJsZQovKiBAdnVlL2NvbXBvbmVudCAqLwopLmV4dGVuZCh7CiAgbmFtZTogJ3YtYnJlYWRjcnVtYnMnLAogIHByb3BzOiB7CiAgICBkaXZpZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJy8nCiAgICB9LAogICAgaXRlbXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIGxhcmdlOiBCb29sZWFuLAogICAganVzdGlmeUNlbnRlcjogQm9vbGVhbiwKICAgIGp1c3RpZnlFbmQ6IEJvb2xlYW4KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkgewogICAgICByZXR1cm4gX2V4dGVuZHMoewogICAgICAgICd2LWJyZWFkY3J1bWJzLS1sYXJnZSc6IHRoaXMubGFyZ2UsCiAgICAgICAgJ2p1c3RpZnktY2VudGVyJzogdGhpcy5qdXN0aWZ5Q2VudGVyLAogICAgICAgICdqdXN0aWZ5LWVuZCc6IHRoaXMuanVzdGlmeUVuZAogICAgICB9LCB0aGlzLnRoZW1lQ2xhc3Nlcyk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaWYgKHRoaXMuanVzdGlmeUNlbnRlcikgZGVwcmVjYXRlKCdqdXN0aWZ5LWNlbnRlcicsICdjbGFzcz0ianVzdGlmeS1jZW50ZXIiJywgdGhpcyk7CiAgICBpZiAodGhpcy5qdXN0aWZ5RW5kKSBkZXByZWNhdGUoJ2p1c3RpZnktZW5kJywgJ2NsYXNzPSJqdXN0aWZ5LWVuZCInLCB0aGlzKTsKICAgIGlmICh0aGlzLiRzbG90cy5kZWZhdWx0KSBkZXByZWNhdGUoJ2RlZmF1bHQgc2xvdCcsICc6aXRlbXMgYW5kIHNjb3BlZCBzbG90ICJpdGVtIicsIHRoaXMpOwogIH0sCiAgbWV0aG9kczogewogICAgLyogQGRlcHJlY2F0ZWQgKi8KICAgIGdlbkNoaWxkcmVuCiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLwogICAgOiBmdW5jdGlvbiBnZW5DaGlsZHJlbigpIHsKICAgICAgaWYgKCF0aGlzLiRzbG90cy5kZWZhdWx0KSByZXR1cm4gdW5kZWZpbmVkOwogICAgICB2YXIgY2hpbGRyZW4gPSBbXTsKICAgICAgdmFyIGNyZWF0ZURpdmlkZXJzID0gZmFsc2U7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuJHNsb3RzLmRlZmF1bHQubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgZWxtID0gdGhpcy4kc2xvdHMuZGVmYXVsdFtpXTsKCiAgICAgICAgaWYgKCFlbG0uY29tcG9uZW50T3B0aW9ucyB8fCBlbG0uY29tcG9uZW50T3B0aW9ucy5DdG9yLm9wdGlvbnMubmFtZSAhPT0gJ3YtYnJlYWRjcnVtYnMtaXRlbScpIHsKICAgICAgICAgIGNoaWxkcmVuLnB1c2goZWxtKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKGNyZWF0ZURpdmlkZXJzKSB7CiAgICAgICAgICAgIGNoaWxkcmVuLnB1c2godGhpcy5nZW5EaXZpZGVyKCkpOwogICAgICAgICAgfQoKICAgICAgICAgIGNoaWxkcmVuLnB1c2goZWxtKTsKICAgICAgICAgIGNyZWF0ZURpdmlkZXJzID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBjaGlsZHJlbjsKICAgIH0sCiAgICBnZW5EaXZpZGVyOiBmdW5jdGlvbiBnZW5EaXZpZGVyKCkgewogICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChWQnJlYWRjcnVtYnNEaXZpZGVyLCB0aGlzLiRzbG90cy5kaXZpZGVyID8gdGhpcy4kc2xvdHMuZGl2aWRlciA6IHRoaXMuZGl2aWRlcik7CiAgICB9LAogICAgZ2VuSXRlbXM6IGZ1bmN0aW9uIGdlbkl0ZW1zKCkgewogICAgICB2YXIgaXRlbXMgPSBbXTsKICAgICAgdmFyIGhhc1Nsb3QgPSAhIXRoaXMuJHNjb3BlZFNsb3RzLml0ZW07CiAgICAgIHZhciBrZXlzID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgaXRlbSA9IHRoaXMuaXRlbXNbaV07CiAgICAgICAga2V5cy5wdXNoKGl0ZW0udGV4dCk7CiAgICAgICAgaWYgKGhhc1Nsb3QpIGl0ZW1zLnB1c2godGhpcy4kc2NvcGVkU2xvdHMuaXRlbSh7CiAgICAgICAgICBpdGVtOiBpdGVtCiAgICAgICAgfSkpO2Vsc2UgaXRlbXMucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KFZCcmVhZGNydW1ic0l0ZW0sIHsKICAgICAgICAgIGtleToga2V5cy5qb2luKCcuJyksCiAgICAgICAgICBwcm9wczogaXRlbQogICAgICAgIH0sIFtpdGVtLnRleHRdKSk7CiAgICAgICAgaWYgKGkgPCB0aGlzLml0ZW1zLmxlbmd0aCAtIDEpIGl0ZW1zLnB1c2godGhpcy5nZW5EaXZpZGVyKCkpOwogICAgICB9CgogICAgICByZXR1cm4gaXRlbXM7CiAgICB9CiAgfSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7CiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLiRzbG90cy5kZWZhdWx0ID8gdGhpcy5nZW5DaGlsZHJlbigpIDogdGhpcy5nZW5JdGVtcygpOwogICAgcmV0dXJuIGgoJ3VsJywgewogICAgICBzdGF0aWNDbGFzczogJ3YtYnJlYWRjcnVtYnMnLAogICAgICAnY2xhc3MnOiB0aGlzLmNsYXNzZXMKICAgIH0sIGNoaWxkcmVuKTsKICB9Cn0pOw=="},{"version":3,"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_breadcrumbs.styl'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport { VBreadcrumbsDivider, VBreadcrumbsItem } from '.'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport { deprecate } from '../../util/console'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n\n  props: {\n    divider: {\n      type: String,\n      default: '/'\n    },\n    items: {\n      type: Array,\n      default: () => ([])\n    } as PropValidator<any[]>,\n    large: Boolean,\n    justifyCenter: Boolean,\n    justifyEnd: Boolean\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-breadcrumbs--large': this.large,\n        'justify-center': this.justifyCenter,\n        'justify-end': this.justifyEnd,\n        ...this.themeClasses\n      }\n    }\n  },\n\n  mounted () {\n    if (this.justifyCenter) deprecate('justify-center', 'class=\"justify-center\"', this)\n    if (this.justifyEnd) deprecate('justify-end', 'class=\"justify-end\"', this)\n    if (this.$slots.default) deprecate('default slot', ':items and scoped slot \"item\"', this)\n  },\n\n  methods: {\n    /* @deprecated */\n    genChildren /* istanbul ignore next */ () {\n      if (!this.$slots.default) return undefined\n\n      const children = []\n\n      let createDividers = false\n      for (let i = 0; i < this.$slots.default.length; i++) {\n        const elm = this.$slots.default[i]\n\n        if (\n          !elm.componentOptions ||\n          elm.componentOptions.Ctor.options.name !== 'v-breadcrumbs-item'\n        ) {\n          children.push(elm)\n        } else {\n          if (createDividers) {\n            children.push(this.genDivider())\n          }\n          children.push(elm)\n          createDividers = true\n        }\n      }\n\n      return children\n    },\n    genDivider () {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider)\n    },\n    genItems () {\n      const items = []\n      const hasSlot = !!this.$scopedSlots.item\n      const keys = []\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i]\n\n        keys.push(item.text)\n\n        if (hasSlot) items.push(this.$scopedSlots.item!({ item }))\n        else items.push(this.$createElement(VBreadcrumbsItem, { key: keys.join('.'), props: item }, [item.text]))\n\n        if (i < this.items.length - 1) items.push(this.genDivider())\n      }\n\n      return items\n    }\n  },\n\n  render (h): VNode {\n    const children = this.$slots.default ? this.genChildren() : this.genItems()\n\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      'class': this.classes\n    }, children)\n  }\n})\n"],"sourceRoot":""}]}