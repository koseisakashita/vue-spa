{"remainingRequest":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/thread-loader/dist/cjs.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VDatePicker/util/createNativeLocaleFormatter.js","dependencies":[{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VDatePicker/util/createNativeLocaleFormatter.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKCnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgewogICAgdmFyIF9hcnIgPSBbXTsKICAgIHZhciBfbiA9IHRydWU7CiAgICB2YXIgX2QgPSBmYWxzZTsKICAgIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgICB0cnkgewogICAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7CiAgICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgICB9CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgX2QgPSB0cnVlOwogICAgICBfZSA9IGVycjsKICAgIH0gZmluYWxseSB7CiAgICAgIHRyeSB7CiAgICAgICAgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0pIF9pWyJyZXR1cm4iXSgpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gX2FycjsKICB9CgogIHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7CiAgICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7CiAgICAgIHJldHVybiBhcnI7CiAgICB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgewogICAgICByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOwogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwogICAgfQogIH07Cn0oKTsKCmltcG9ydCBwYWQgZnJvbSAnLi9wYWQnOwoKZnVuY3Rpb24gY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyKGxvY2FsZSwgb3B0aW9ucykgewogIHZhciBzdWJzdHJPcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7CiAgICBzdGFydDogMCwKICAgIGxlbmd0aDogMAogIH07CgogIHZhciBtYWtlSXNvU3RyaW5nID0gZnVuY3Rpb24gbWFrZUlzb1N0cmluZyhkYXRlU3RyaW5nKSB7CiAgICB2YXIgX2RhdGVTdHJpbmckdHJpbSRzcGxpID0gZGF0ZVN0cmluZy50cmltKCkuc3BsaXQoJyAnKVswXS5zcGxpdCgnLScpLAogICAgICAgIF9kYXRlU3RyaW5nJHRyaW0kc3BsaTIgPSBfc2xpY2VkVG9BcnJheShfZGF0ZVN0cmluZyR0cmltJHNwbGksIDMpLAogICAgICAgIHllYXIgPSBfZGF0ZVN0cmluZyR0cmltJHNwbGkyWzBdLAogICAgICAgIG1vbnRoID0gX2RhdGVTdHJpbmckdHJpbSRzcGxpMlsxXSwKICAgICAgICBkYXRlID0gX2RhdGVTdHJpbmckdHJpbSRzcGxpMlsyXTsKCiAgICByZXR1cm4gW3BhZCh5ZWFyLCA0KSwgcGFkKG1vbnRoIHx8IDEpLCBwYWQoZGF0ZSB8fCAxKV0uam9pbignLScpOwogIH07CgogIHRyeSB7CiAgICB2YXIgaW50bEZvcm1hdHRlciA9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KGxvY2FsZSB8fCB1bmRlZmluZWQsIG9wdGlvbnMpOwogICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRlU3RyaW5nKSB7CiAgICAgIHJldHVybiBpbnRsRm9ybWF0dGVyLmZvcm1hdChuZXcgRGF0ZShtYWtlSXNvU3RyaW5nKGRhdGVTdHJpbmcpICsgJ1QwMDowMDowMCswMDowMCcpKTsKICAgIH07CiAgfSBjYXRjaCAoZSkgewogICAgcmV0dXJuIHN1YnN0ck9wdGlvbnMuc3RhcnQgfHwgc3Vic3RyT3B0aW9ucy5sZW5ndGggPyBmdW5jdGlvbiAoZGF0ZVN0cmluZykgewogICAgICByZXR1cm4gbWFrZUlzb1N0cmluZyhkYXRlU3RyaW5nKS5zdWJzdHIoc3Vic3RyT3B0aW9ucy5zdGFydCB8fCAwLCBzdWJzdHJPcHRpb25zLmxlbmd0aCk7CiAgICB9IDogdW5kZWZpbmVkOwogIH0KfQoKZXhwb3J0IGRlZmF1bHQgY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyOw=="},{"version":3,"sources":["../../../../src/components/VDatePicker/util/createNativeLocaleFormatter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,GAAA,MAAA,OAAA;;AAoBA,SAAA,2BAAA,CAAA,MAAA,EAAA,OAAA,EAGwD;AAAA,MAAtD,aAAsD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAvB;AAAE,IAAA,KAAA,EAAF,CAAA;AAAY,IAAA,MAAA,EAAZ;AAAA,GAAuB;;AAEtD,MAAM,aAAA,GAAgB,SAAhB,aAAgB,CAAA,UAAA,EAAuB;AAAA,QAAA,qBAAA,GACf,UAAA,CAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,CADe,GACf,CADe;AAAA,QAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,QACpC,IADoC,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,QAC9B,KAD8B,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,QACvB,IADuB,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAE3C,WAAO,CAAC,GAAA,CAAA,IAAA,EAAD,CAAC,CAAD,EAAe,GAAA,CAAI,KAAA,IAAnB,CAAe,CAAf,EAAgC,GAAA,CAAI,IAAA,IAApC,CAAgC,CAAhC,EAAA,IAAA,CAAP,GAAO,CAAP;AAFF,GAAA;;AAKA,MAAI;AACF,QAAM,aAAA,GAAgB,IAAI,IAAA,CAAJ,cAAA,CAAwB,MAAA,IAAxB,SAAA,EAAtB,OAAsB,CAAtB;AACA,WAAO,UAAA,UAAA,EAAA;AAAA,aAAwB,aAAA,CAAA,MAAA,CAAqB,IAAA,IAAA,CAAY,aAAA,CAAZ,UAAY,CAAA,GAAzD,iBAA6C,CAArB,CAAxB;AAAP,KAAA;AAFF,GAAA,CAGE,OAAA,CAAA,EAAU;AACV,WAAQ,aAAA,CAAA,KAAA,IAAuB,aAAA,CAAxB,MAAC,GACJ,UAAA,UAAA,EAAA;AAAA,aAAwB,aAAA,CAAA,UAAA,CAAA,CAAA,MAAA,CAAiC,aAAA,CAAA,KAAA,IAAjC,CAAA,EAA2D,aAAA,CAAnF,MAAwB,CAAxB;AADG,KAAC,GAAR,SAAA;AAGD;AACF;;AAED,eAAA,2BAAA","sourcesContent":["import pad from './pad'\n\ninterface SubstrOptions {\n  start?: number\n  length: number\n}\n\nexport type DatePickerFormatter = (date: string) => string\n\nfunction createNativeLocaleFormatter (\n  local: string | undefined,\n  options: Intl.DateTimeFormatOptions\n): DatePickerFormatter | undefined\n\nfunction createNativeLocaleFormatter (\n  local: string | undefined,\n  options: Intl.DateTimeFormatOptions,\n  substrOptions: SubstrOptions\n): DatePickerFormatter\n\nfunction createNativeLocaleFormatter (\n  locale: string | undefined,\n  options: Intl.DateTimeFormatOptions,\n  substrOptions: SubstrOptions = { start: 0, length: 0 }\n): DatePickerFormatter | undefined {\n  const makeIsoString = (dateString: string) => {\n    const [year, month, date] = dateString.trim().split(' ')[0].split('-')\n    return [pad(year, 4), pad(month || 1), pad(date || 1)].join('-')\n  }\n\n  try {\n    const intlFormatter = new Intl.DateTimeFormat(locale || undefined, options)\n    return (dateString: string) => intlFormatter.format(new Date(`${makeIsoString(dateString)}T00:00:00+00:00`))\n  } catch (e) {\n    return (substrOptions.start || substrOptions.length)\n      ? (dateString: string) => makeIsoString(dateString).substr(substrOptions.start || 0, substrOptions.length)\n      : undefined\n  }\n}\n\nexport default createNativeLocaleFormatter\n"],"sourceRoot":""}]}