{"remainingRequest":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VCalendar/util/timestamp.js","dependencies":[{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VCalendar/util/timestamp.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../../src/components/VCalendar/util/timestamp.ts"],"names":[],"mappings":"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","sourcesContent":["\nexport const PARSE_REGEX: RegExp = /^(\\d{4})-(\\d{1,2})(-(\\d{1,2}))?([^\\d]+(\\d{1,2}))?(:(\\d{1,2}))?(:(\\d{1,2}))?$/\nexport const PARSE_TIME: RegExp = /(\\d\\d?)(:(\\d\\d?)|)(:(\\d\\d?)|)/\n\nexport const DAYS_IN_MONTH: number[] = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_LEAP: number[] = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_MIN = 28\nexport const DAYS_IN_MONTH_MAX = 31\nexport const MONTH_MAX = 12\nexport const MONTH_MIN = 1\nexport const DAY_MIN = 1\nexport const DAYS_IN_WEEK = 7\nexport const MINUTES_IN_HOUR = 60\nexport const HOURS_IN_DAY = 24\nexport const FIRST_HOUR = 0\n\nexport interface VTimestamp {\n  date: string\n  time: string\n  year: number\n  month: number\n  day: number\n  weekday: number\n  hour: number\n  minute: number\n  hasDay: boolean\n  hasTime: boolean\n  past: boolean\n  present: boolean\n  future: boolean\n}\n\nexport interface VTimeObject {\n  hour: number\n  minute: number\n}\n\nexport type VTime = number | string | VTimeObject\n\nexport type VTimestampFormatter = (timestamp: VTimestamp, short: boolean) => string\n\nexport type VTimestampFormatOptions = (timestamp: VTimestamp, short: boolean) => object\n\nexport type VTimestampOperation = (timestamp: VTimestamp) => VTimestamp\n\nexport function getStartOfWeek (timestamp: VTimestamp, weekdays: number[], today?: VTimestamp): VTimestamp {\n  const start = copyTimestamp(timestamp)\n  findWeekday(start, weekdays[0], prevDay)\n  updateFormatted(start)\n  if (today) {\n    updateRelative(start, today, start.hasTime)\n  }\n  return start\n}\n\nexport function getEndOfWeek (timestamp: VTimestamp, weekdays: number[], today?: VTimestamp): VTimestamp {\n  const end = copyTimestamp(timestamp)\n  findWeekday(end, weekdays[weekdays.length - 1])\n  updateFormatted(end)\n  if (today) {\n    updateRelative(end, today, end.hasTime)\n  }\n  return end\n}\n\nexport function getStartOfMonth (timestamp: VTimestamp): VTimestamp {\n  const start = copyTimestamp(timestamp)\n  start.day = DAY_MIN\n  updateWeekday(start)\n  updateFormatted(start)\n  return start\n}\n\nexport function getEndOfMonth (timestamp: VTimestamp): VTimestamp {\n  const end = copyTimestamp(timestamp)\n  end.day = daysInMonth(end.year, end.month)\n  updateWeekday(end)\n  updateFormatted(end)\n  return end\n}\n\nexport function parseTime (input: any): number | false {\n  if (typeof input === 'number') {\n    // when a number is given, it's minutes since 12:00am\n    return input\n  } else if (typeof input === 'string') {\n    // when a string is given, it's a hh:mm:ss format where seconds are optional\n    const parts = PARSE_TIME.exec(input)\n    if (!parts) {\n      return false\n    }\n    return parseInt(parts[1]) * 60 + parseInt(parts[3] || 0)\n  } else if (typeof input === 'object') {\n    // when an object is given, it must have hour and minute\n    if (typeof input.hour !== 'number' || typeof input.minute !== 'number') {\n      return false\n    }\n    return input.hour * 60 + input.minute\n  } else {\n    // unsupported type\n    return false\n  }\n}\n\nexport function validateTimestamp (input: any): boolean {\n  return !!PARSE_REGEX.exec(input)\n}\n\nexport function parseTimestamp (input: string, now?: VTimestamp): VTimestamp | null {\n  // YYYY-MM-DD hh:mm:ss\n  const parts = PARSE_REGEX.exec(input)\n\n  if (!parts) return null\n\n  const timestamp: VTimestamp = {\n    date: input,\n    time: '',\n    year: parseInt(parts[1]),\n    month: parseInt(parts[2]),\n    day: parseInt(parts[4]) || 1,\n    hour: parseInt(parts[6]) || 0,\n    minute: parseInt(parts[8]) || 0,\n    weekday: 0,\n    hasDay: !!parts[4],\n    hasTime: !!(parts[6] && parts[8]),\n    past: false,\n    present: false,\n    future: false\n  }\n\n  updateWeekday(timestamp)\n  updateFormatted(timestamp)\n\n  if (now) {\n    updateRelative(timestamp, now, timestamp.hasTime)\n  }\n\n  return timestamp\n}\n\nexport function parseDate (date: Date): VTimestamp {\n  return updateFormatted({\n    date: '',\n    time: '',\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    weekday: date.getDay(),\n    hour: date.getHours(),\n    minute: date.getMinutes(),\n    hasDay: true,\n    hasTime: true,\n    past: false,\n    present: true,\n    future: false\n  })\n}\n\nexport function getDayIdentifier (timestamp: VTimestamp): number {\n  return timestamp.year * 10000 + timestamp.month * 100 + timestamp.day\n}\n\nexport function getTimeIdentifier (timestamp: VTimestamp): number {\n  return timestamp.hour * 100 + timestamp.minute\n}\n\nexport function updateRelative (timestamp: VTimestamp, now: VTimestamp, time = false): VTimestamp {\n  let a = getDayIdentifier(now)\n  let b = getDayIdentifier(timestamp)\n  let present = a === b\n\n  if (timestamp.hasTime && time && present) {\n    a = getTimeIdentifier(now)\n    b = getTimeIdentifier(timestamp)\n    present = a === b\n  }\n\n  timestamp.past = b < a\n  timestamp.present = present\n  timestamp.future = b > a\n\n  return timestamp\n}\n\nexport function updateMinutes (timestamp: VTimestamp, minutes: number, now?: VTimestamp): VTimestamp {\n  timestamp.hasTime = true\n  timestamp.hour = Math.floor(minutes / MINUTES_IN_HOUR)\n  timestamp.minute = minutes % MINUTES_IN_HOUR\n  timestamp.time = getTime(timestamp)\n  if (now) {\n    updateRelative(timestamp, now, true)\n  }\n\n  return timestamp\n}\n\nexport function updateWeekday (timestamp: VTimestamp): VTimestamp {\n  timestamp.weekday = getWeekday(timestamp)\n\n  return timestamp\n}\n\nexport function updateFormatted (timestamp: VTimestamp): VTimestamp {\n  timestamp.time = getTime(timestamp)\n  timestamp.date = getDate(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekday (timestamp: VTimestamp): number {\n  if (timestamp.hasDay) {\n    const _ = Math.floor\n    const k = timestamp.day\n    const m = ((timestamp.month + 9) % MONTH_MAX) + 1\n    const C = _(timestamp.year / 100)\n    const Y = (timestamp.year % 100) - (timestamp.month <= 2 ? 1 : 0)\n\n    return (((k + _(2.6 * m - 0.2) - 2 * C + Y + _(Y / 4) + _(C / 4)) % 7) + 7) % 7\n  }\n\n  return timestamp.weekday\n}\n\nexport function isLeapYear (year: number): boolean {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\n\nexport function daysInMonth (year: number, month: number) {\n  return isLeapYear(year) ? DAYS_IN_MONTH_LEAP[month] : DAYS_IN_MONTH[month]\n}\n\nexport function copyTimestamp (timestamp: VTimestamp): VTimestamp {\n  const { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future } = timestamp\n\n  return { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future }\n}\n\nexport function padNumber (x: number, length: number): string {\n  let padded = String(x)\n  while (padded.length < length) {\n    padded = '0' + padded\n  }\n\n  return padded\n}\n\nexport function getDate (timestamp: VTimestamp): string {\n  let str = `${padNumber(timestamp.year, 4)}-${padNumber(timestamp.month, 2)}`\n\n  if (timestamp.hasDay) str += `-${padNumber(timestamp.day, 2)}`\n\n  return str\n}\n\nexport function getTime (timestamp: VTimestamp): string {\n  if (!timestamp.hasTime) {\n    return ''\n  }\n\n  return `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n}\n\nexport function nextMinutes (timestamp: VTimestamp, minutes: number): VTimestamp {\n  timestamp.minute += minutes\n  while (timestamp.minute > MINUTES_IN_HOUR) {\n    timestamp.minute -= MINUTES_IN_HOUR\n    timestamp.hour++\n    if (timestamp.hour >= HOURS_IN_DAY) {\n      nextDay(timestamp)\n      timestamp.hour = FIRST_HOUR\n    }\n  }\n\n  return timestamp\n}\n\nexport function nextDay (timestamp: VTimestamp): VTimestamp {\n  timestamp.day++\n  timestamp.weekday = (timestamp.weekday + 1) % DAYS_IN_WEEK\n  if (timestamp.day > DAYS_IN_MONTH_MIN && timestamp.day > daysInMonth(timestamp.year, timestamp.month)) {\n    timestamp.day = DAY_MIN\n    timestamp.month++\n    if (timestamp.month > MONTH_MAX) {\n      timestamp.month = MONTH_MIN\n      timestamp.year++\n    }\n  }\n\n  return timestamp\n}\n\nexport function prevDay (timestamp: VTimestamp): VTimestamp {\n  timestamp.day--\n  timestamp.weekday = (timestamp.weekday + 6) % DAYS_IN_WEEK\n  if (timestamp.day < DAY_MIN) {\n    timestamp.month--\n    if (timestamp.month < MONTH_MIN) {\n      timestamp.year--\n      timestamp.month = MONTH_MAX\n    }\n    timestamp.day = daysInMonth(timestamp.year, timestamp.month)\n  }\n\n  return timestamp\n}\n\nexport function relativeDays (timestamp: VTimestamp,\n  mover: VTimestampOperation = nextDay, days = 1): VTimestamp {\n  while (--days >= 0) mover(timestamp)\n\n  return timestamp\n}\n\nexport function findWeekday (timestamp: VTimestamp, weekday: number,\n  mover: VTimestampOperation = nextDay, maxDays = 6): VTimestamp {\n  while (timestamp.weekday !== weekday && --maxDays >= 0) mover(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekdaySkips (weekdays: number[]): number[] {\n  const skips: number[] = [1, 1, 1, 1, 1, 1, 1]\n  const filled: number[] = [0, 0, 0, 0, 0, 0, 0]\n  for (let i = 0; i < weekdays.length; i++) {\n    filled[weekdays[i]] = 1\n  }\n  for (let k = 0; k < DAYS_IN_WEEK; k++) {\n    let skip = 1\n    for (let j = 1; j < DAYS_IN_WEEK; j++) {\n      const next = (k + j) % DAYS_IN_WEEK\n      if (filled[next]) {\n        break\n      }\n      skip++\n    }\n    skips[k] = filled[k] * skip\n  }\n\n  return skips\n}\n\nexport function createDayList (start: VTimestamp, end: VTimestamp, now: VTimestamp,\n  weekdaySkips: number[], max = 42, min = 0): VTimestamp[] {\n  const stop = getDayIdentifier(end)\n  const days: VTimestamp[] = []\n  let current = copyTimestamp(start)\n  let currentIdentifier = 0\n  let stopped = currentIdentifier === stop\n\n  if (stop < getDayIdentifier(start)) {\n    return days\n  }\n\n  while ((!stopped || days.length < min) && days.length < max) {\n    currentIdentifier = getDayIdentifier(current)\n    stopped = stopped || currentIdentifier === stop\n    if (weekdaySkips[current.weekday] === 0) {\n      current = nextDay(current)\n      continue\n    }\n    const day = copyTimestamp(current)\n    updateFormatted(day)\n    updateRelative(day, now)\n    days.push(day)\n    current = relativeDays(current, nextDay, weekdaySkips[current.weekday])\n  }\n\n  return days\n}\n\nexport function createIntervalList (timestamp: VTimestamp, first: number,\n  minutes: number, count: number, now?: VTimestamp): VTimestamp[] {\n  const intervals: VTimestamp[] = []\n\n  for (let i = 0; i < count; i++) {\n    const mins = (first + i) * minutes\n    const int = copyTimestamp(timestamp)\n    intervals.push(updateMinutes(int, mins, now))\n  }\n\n  return intervals\n}\n\nexport function createNativeLocaleFormatter (locale: string, getOptions: VTimestampFormatOptions): VTimestampFormatter {\n  const emptyFormatter: VTimestampFormatter = (_t, _s) => ''\n\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return emptyFormatter\n  }\n\n  return (timestamp, short) => {\n    try {\n      const intlFormatter = new Intl.DateTimeFormat(locale || undefined, getOptions(timestamp, short))\n      const time = `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n      const date = timestamp.date\n      return intlFormatter.format(new Date(`${date}T${time}:00+00:00`))\n    } catch (e) {\n      return ''\n    }\n  }\n}\n"],"sourceRoot":""}]}