{"remainingRequest":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/thread-loader/dist/cjs.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js","dependencies":[{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VAutocomplete/VAutocomplete.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_autocompletes.styl'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    browserAutocomplete: {\n      type: String,\n      default: 'off'\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      }\n    },\n    hideNoData: Boolean,\n    noFilter: Boolean,\n    searchInput: {\n      default: undefined\n    },\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data: vm => ({\n    attrsInput: null,\n    lazySearch: vm.searchInput\n  }),\n\n  computed: {\n    classes () {\n      return Object.assign({}, VSelect.options.computed.classes.call(this), {\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      })\n    },\n    computedItems () {\n      return this.filteredItems\n    },\n    selectedValues () {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems () {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    /**\n     * The range of the current input text\n     *\n     * @return {Number}\n     */\n    currentRange () {\n      if (this.selectedItem == null) return 0\n\n      return this.getText(this.selectedItem).toString().length\n    },\n    filteredItems () {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => this.filter(item, this.internalSearch.toString(), this.getText(item).toString()))\n    },\n    internalSearch: {\n      get () {\n        return this.lazySearch\n      },\n      set (val) {\n        this.lazySearch = val\n\n        this.$emit('update:searchInput', val)\n      }\n    },\n    isAnyValueAllowed () {\n      return false\n    },\n    isDirty () {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching () {\n      if (this.multiple) return this.searchIsDirty\n\n      return (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow () {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps () {\n      const props = VSelect.options.computed.$_menuProps.call(this)\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props\n      }\n    },\n    searchIsDirty () {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem () {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this)\n\n      Object.assign(data.props, {\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch\n      })\n\n      return data\n    }\n  },\n\n  watch: {\n    filteredItems (val) {\n      this.onFilteredItemsChanged(val)\n    },\n    internalValue () {\n      this.setSearch()\n    },\n    isFocused (val) {\n      if (val) {\n        this.$refs.input &&\n          this.$refs.input.select()\n      } else {\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val) {\n      this.lazySearch = val\n    },\n    internalSearch (val) {\n      this.onInternalSearchChanged(val)\n    },\n    itemText () {\n      this.updateSelf()\n    }\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    onFilteredItemsChanged (val) {\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        this.setMenuIndex(val.length > 0 && (val.length === 1 || this.autoSelectFirst) ? 0 : -1)\n      })\n    },\n    onInternalSearchChanged (val) {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      if (this.isMenuActive &&\n        this.$refs.menu\n      ) {\n        this.$refs.menu.updateDimensions()\n      }\n    },\n    changeSelectedIndex (keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (![\n        keyCodes.backspace,\n        keyCodes.left,\n        keyCodes.right,\n        keyCodes.delete\n      ].includes(keyCode)) return\n\n      const indexes = this.selectedItems.length - 1\n\n      if (keyCode === keyCodes.left) {\n        this.selectedIndex = this.selectedIndex === -1\n          ? indexes\n          : this.selectedIndex - 1\n      } else if (keyCode === keyCodes.right) {\n        this.selectedIndex = this.selectedIndex >= indexes\n          ? -1\n          : this.selectedIndex + 1\n      } else if (this.selectedIndex === -1) {\n        this.selectedIndex = indexes\n        return\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n\n      if ([\n        keyCodes.backspace,\n        keyCodes.delete\n      ].includes(keyCode) &&\n        !this.getDisabled(currentItem)\n      ) {\n        const newIndex = this.selectedIndex === indexes\n          ? this.selectedIndex - 1\n          : this.selectedItems[this.selectedIndex + 1]\n            ? this.selectedIndex\n            : -1\n\n        if (newIndex === -1) {\n          this.setValue(this.multiple ? [] : undefined)\n        } else {\n          this.selectItem(currentItem)\n        }\n\n        this.selectedIndex = newIndex\n      }\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data.attrs.role = 'combobox'\n      input.data.domProps.value = this.internalSearch\n\n      return input\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      this.activateMenu()\n    },\n    onEnterDown () {\n      // Avoid invoking this method\n      // will cause updateSelf to\n      // be called emptying search\n    },\n    onInput (e) {\n      if (this.selectedIndex > -1) return\n\n      // If typing and menu is not currently active\n      if (e.target.value) {\n        this.activateMenu()\n        if (!this.isAnyValueAllowed) this.setMenuIndex(0)\n      }\n\n      this.mask && this.resetSelections(e.target)\n      this.internalSearch = e.target.value\n      this.badInput = e.target.validity && e.target.validity.badInput\n    },\n    onKeyDown (e) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        this.internalSearch = (\n          this.multiple &&\n          this.internalSearch &&\n          this.isMenuActive\n        )\n          ? this.internalSearch\n          : (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n      })\n    },\n    updateSelf () {\n      this.updateAutocomplete()\n    },\n    updateAutocomplete () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    }\n  }\n})\n"],"sourceRoot":""}]}