{"remainingRequest":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js!/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VCombobox/VCombobox.js","dependencies":[{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/vuetify/lib/components/VCombobox/VCombobox.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sakashita/Documents/software/sample-vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VCombobox/VCombobox.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_autocompletes.styl'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n/* @vue/component */\nexport default {\n  name: 'v-combobox',\n\n  extends: VAutocomplete,\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([])\n    },\n    returnObject: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data: () => ({\n    editingIndex: -1\n  }),\n\n  computed: {\n    counterValue () {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot () {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed () {\n      return true\n    },\n    menuCanShow () {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    }\n  },\n\n  methods: {\n    onFilteredItemsChanged () {\n      // nop\n    },\n    onInternalSearchChanged (val) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genChipSelection (item, index) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions.listeners.dblclick = () => {\n          this.editingIndex = index\n          this.internalSearch = this.getText(item)\n          this.selectedIndex = -1\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e) {\n      e.preventDefault()\n\n      VSelect.options.methods.onEnterDown.call(this)\n\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.updateSelf()\n    },\n    onKeyDown (e) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VSelect.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value = this.internalSearch) {\n      VSelect.options.methods.setValue.call(this, value)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n\n      // If search is not dirty and is\n      // using slot, do nothing\n      if (isUsingSlot && !this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot\n      // to avoid a double input\n      if (isUsingSlot) this.internalSearch = undefined\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    }\n  }\n}\n"],"sourceRoot":""}]}